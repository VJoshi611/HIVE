This is a real time dataset of the ineuron technical consultant team. You have to perform hive analysis on this given dataset.

Download Dataset 1 - https://drive.google.com/file/d/1WrG-9qv6atP-W3P_-gYln1hHyFKRKMHP/view

Download Dataset 2 - https://drive.google.com/file/d/1-JIPCZ34dyN6k9CqJa-Y8yxIGq6vTVXU/view

Note: both files are csv files. 

------------------------------------------------------------------------------------------

1. Create a schema based on the given dataset

create table agentlogin
(
sl_no int,
Agent string,
dates string,
login_time string,
logout_time string,
duration string
)
row format delimited
fields terminated by','
tblproperties("skip.header.line.count"="1"); 

create table agentperformance
(
sl_no int,
dates string,
agent_name string,
total_chats string,
avg_response_time string,
avg_resolution_time string,
average_rating float,
total_feedback int
)
row format delimited
fields terminated by ','
tblproperties("skip.header.line.count"="1"); 

------------------------------------------------------------------------------------------

2. Dump the data inside the hdfs in the given schema location.

hadoop fs -put AgentLogingReport.csv /tmp
load data inpath '/tmp/AgentLogingReport.csv' into table agentlogin;

select * from agentlogin limit 5;

hadoop fs -put AgentPerformance.csv /tmp
load data inpath '/tmp/AgentPerformance.csv' into table agentperformance;

select * from agentperformance limit 5;

------------------------------------------------------------------------------------------

3. List of all agents' names. 

select distinct agent from agentlogin;

------------------------------------------------------------------------------------------

4. Find out agent average rating.
select agent_name, avg(average_rating) from agentperformance group by agent_name;


5. Total working days for each agents 



6. Total query that each agent have taken 


7. Total Feedback that each agent have received 
select agent_name, sum(total_feedback) from agentperformance group by agent_name;


8. Agent name who have average rating between 3.5 to 4 
select agent_name from agentperformance where average_rating BETWEEN 3.5 AND 4  limit 10 ;


9. Agent name who have rating less than 3.5 
select agent_name from agentperformance where average_rating < 3.5  limit 5;


10. Agent name who have rating more than 4.5 
select agent_name from agentperformance where average_rating > 4.5 ;

11. How many feedback agents have received more than 4.5 average
select agent_name, avg(total_feedback) as result from agentperformance group by agent_name having result>4.5  limit 10 ;


12. average weekly response time for each agent 



13. average weekly resolution time for each agents 


14. Find the number of chat on which they have received a feedback 
select agent_name, sum(total_chats), total_feedback from agentperformance where total_feedback > 0 group by agent_name, total_feedback limit 5;

15. Total contribution hour for each and every agents weekly basis 


16. Perform inner join, left join and right join based on the agent column and after joining the table export that data into your local system.

select * from agentlogin a JOIN agentperformance p where a.agent = p.agent as table_1;
select * from agentlogin a LEFT JOIN agentperformance p where a.agent = p.agent as table_2;
select * from agentlogin a RIGHT JOIN agentperformance p where a.agent = p.agent as table_3;

INSERT OVERWRITE LOCAL DIRECTORY '/tmp/out' SELECT * FROM table_1;
INSERT OVERWRITE LOCAL DIRECTORY '/tmp/out' SELECT * FROM table_2;
INSERT OVERWRITE LOCAL DIRECTORY '/tmp/out' SELECT * FROM table_3;


17. Perform partitioning on top of the agent column and then on top of that perform bucketing for each partitioning.






